{"mappings":"ACCA,IAAM,KAAO,IAAI,KACb,KAAO,KAAK,WAAW,GACrB,YAAc,SAAS,aAAa,CAAC,QACvC,CAAA,aACF,CAAA,YAAY,WAAW,CAAG,IAD5B,EAKA,IAAM,SAAW,SAAS,aAAa,CAAC,cAClC,UAAY,SAAS,aAAa,CAAC,eACnC,SAAW,SAAS,aAAa,CAAC,cAExC,SAAS,WACH,OAAO,UAAU,CAAG,MACtB,UAAU,UAAU,OAAO,UAC3B,WAAW,UAAU,OAAO,UAC5B,UAAU,UAAU,OAAO,UAE/B,CAEA,OAAO,gBAAgB,CAAC,SAAU,UAElC,UAAU,iBAAiB,QAAS,KAClC,UAAU,UAAU,IAAI,UACxB,WAAW,UAAU,IAAI,UACzB,UAAU,UAAU,IAAI,SAE1B,GAEA,WAAW,iBAAiB,QAAS,KACnC,UAAU,UAAU,OAAO,UAC3B,WAAW,UAAU,OAAO,UAC5B,UAAU,UAAU,OAAO,SAC7B,GAGA,IAAM,aAAe,SAAS,aAAa,CAAC,kBAC5C,GAAI,aAAc,CAChB,IAAM,EAAmB,IAAI,qBAAqB,AAAC,IACjD,GAAK,CAAO,CAAC,EAAE,CAAC,cAAc,EAE9B,IAAK,IAAI,KADI,SAAS,gBAAgB,CAAC,kBACjB,CACpB,IAAM,EAAS,EAAI,YAAY,CAAC,cAChC,CAAA,EAAI,KAAK,CAAC,KAAK,CAAG,CAAA,EAAG,EAAO,CAAC,CAAC,AAChC,CACA,EAAiB,UAAU,GAC7B,EAAG,CAAE,WAAY,oBAAqB,GACtC,EAAiB,OAAO,CAAC,aAC3B,CAGA,IAAM,aAAe,SAAS,aAAa,CAAC,UAC5C,GAAI,aAAc,CAChB,IAAM,EAAgB,IAAI,qBAAqB,AAAC,IAC9C,GAAK,CAAO,CAAC,EAAE,CAAC,cAAc,EAE9B,IAAK,IAAI,KADK,SAAS,gBAAgB,CAAC,gBAChB,CACtB,IAAM,EAAe,EAAK,WAAW,CAC/B,EAAS,CAAC,EAAK,YAAY,CAAC,eAC9B,EAAU,EACR,EAAW,YAAY,KAC3B,GAAI,GAAW,EAAQ,YACrB,cAAc,GAGhB,GAAW,EACX,EAAK,WAAW,CAAG,EAAa,QAAQ,CAAC,KAAO,CAAA,EAAG,EAAQ,CAAC,CAAC,CAAG,CAAA,EAAG,EAAA,CAAS,AAC9E,EAAG,KAAO,EACZ,CACA,EAAc,UAAU,GAC1B,EAAG,CAAE,WAAY,oBAAqB,GACtC,EAAc,OAAO,CAAC,aACxB","sources":["<anon>","src/js/main.js"],"sourcesContent":["// Current Date\nconst date = new Date();\nlet year = date.getFullYear();\nconst dateElement = document.querySelector('.date');\nif (dateElement) dateElement.textContent = year;\n//Hamburger Menu\nconst openMenu = document.querySelector(\".open-menu\");\nconst closeMenu = document.querySelector(\".close-menu\");\nconst navLinks = document.querySelector(\".nav-links\");\nfunction resetNav() {\n    if (window.innerWidth > 800) {\n        navLinks?.classList.remove(\"active\");\n        closeMenu?.classList.remove(\"active\");\n        openMenu?.classList.remove(\"active\");\n    }\n}\nwindow.addEventListener(\"resize\", resetNav);\nopenMenu?.addEventListener(\"click\", ()=>{\n    navLinks?.classList.add(\"active\");\n    closeMenu?.classList.add(\"active\");\n    openMenu?.classList.add(\"active\");\n});\ncloseMenu?.addEventListener(\"click\", ()=>{\n    navLinks?.classList.remove(\"active\");\n    closeMenu?.classList.remove(\"active\");\n    openMenu?.classList.remove(\"active\");\n});\n// Progress Bar Animation\nconst skillsetGrid = document.querySelector(\".skillset-grid\");\nif (skillsetGrid) {\n    const observerProgress = new IntersectionObserver((entries)=>{\n        if (!entries[0].isIntersecting) return;\n        const bars = document.querySelectorAll(\".progress-fill\");\n        for (let bar of bars){\n            const target = bar.getAttribute('data-target');\n            bar.style.width = `${target}%`;\n        }\n        observerProgress.disconnect();\n    }, {\n        rootMargin: \"0px 0px -400px 0px\"\n    });\n    observerProgress.observe(skillsetGrid);\n}\n// Stats Animation\nconst statsSection = document.querySelector(\"#stats\");\nif (statsSection) {\n    const observerStats = new IntersectionObserver((entries)=>{\n        if (!entries[0].isIntersecting) return;\n        const stats = document.querySelectorAll(\".stat-number\");\n        for (let stat of stats){\n            const originalText = stat.textContent;\n            const target = +stat.getAttribute('data-target');\n            let current = 0;\n            const interval = setInterval(()=>{\n                if (current >= target) {\n                    clearInterval(interval);\n                    return;\n                }\n                current += 1;\n                stat.textContent = originalText.includes(\"%\") ? `${current}%` : `${current}`;\n            }, 1200 / target);\n        }\n        observerStats.disconnect();\n    }, {\n        rootMargin: \"0px 0px -400px 0px\"\n    });\n    observerStats.observe(statsSection);\n}\n\n//# sourceMappingURL=Personal Portfolio.3698a05b.js.map\n","// Current Date\r\nconst date = new Date();\r\nlet year = date.getFullYear();\r\nconst dateElement = document.querySelector('.date');\r\nif (dateElement) {\r\n  dateElement.textContent = year;\r\n}\r\n\r\n//Hamburger Menu\r\nconst openMenu = document.querySelector(\".open-menu\");\r\nconst closeMenu = document.querySelector(\".close-menu\");\r\nconst navLinks = document.querySelector(\".nav-links\");\r\n\r\nfunction resetNav() {\r\n  if (window.innerWidth > 800) {\r\n    navLinks?.classList.remove(\"active\");\r\n    closeMenu?.classList.remove(\"active\");\r\n    openMenu?.classList.remove(\"active\");\r\n  }\r\n}\r\n\r\nwindow.addEventListener(\"resize\", resetNav);\r\n\r\nopenMenu?.addEventListener(\"click\", () => {\r\n  navLinks?.classList.add(\"active\");\r\n  closeMenu?.classList.add(\"active\");\r\n  openMenu?.classList.add(\"active\");\r\n\r\n});\r\n\r\ncloseMenu?.addEventListener(\"click\", () => {\r\n  navLinks?.classList.remove(\"active\");\r\n  closeMenu?.classList.remove(\"active\");\r\n  openMenu?.classList.remove(\"active\");\r\n});\r\n\r\n// Progress Bar Animation\r\nconst skillsetGrid = document.querySelector(\".skillset-grid\");\r\nif (skillsetGrid) {\r\n  const observerProgress = new IntersectionObserver((entries) => {\r\n    if (!entries[0].isIntersecting) return;\r\n    const bars = document.querySelectorAll(\".progress-fill\");\r\n    for (let bar of bars) {\r\n      const target = bar.getAttribute('data-target');\r\n      bar.style.width = `${target}%`;\r\n    }\r\n    observerProgress.disconnect();\r\n  }, { rootMargin: \"0px 0px -400px 0px\" });\r\n  observerProgress.observe(skillsetGrid);\r\n}\r\n\r\n// Stats Animation\r\nconst statsSection = document.querySelector(\"#stats\");\r\nif (statsSection) {\r\n  const observerStats = new IntersectionObserver((entries) => {\r\n    if (!entries[0].isIntersecting) return;\r\n    const stats = document.querySelectorAll(\".stat-number\");\r\n    for (let stat of stats) {\r\n      const originalText = stat.textContent;\r\n      const target = +stat.getAttribute('data-target');\r\n      let current = 0;\r\n      const interval = setInterval(() => {\r\n        if (current >= target) {\r\n          clearInterval(interval);\r\n          return;\r\n        }\r\n        current += 1;\r\n        stat.textContent = originalText.includes(\"%\") ? `${current}%` : `${current}`;\r\n      }, 1200 / target);\r\n    }\r\n    observerStats.disconnect();\r\n  }, { rootMargin: \"0px 0px -400px 0px\" });\r\n  observerStats.observe(statsSection);\r\n}\r\n"],"names":["date","Date","year","getFullYear","dateElement","document","querySelector","textContent","openMenu","closeMenu","navLinks","resetNav","window","innerWidth","classList","remove","addEventListener","add","skillsetGrid","observerProgress","IntersectionObserver","entries","isIntersecting","bar","querySelectorAll","target","getAttribute","style","width","disconnect","rootMargin","observe","statsSection","observerStats","stat","originalText","current","interval","setInterval","clearInterval","includes"],"version":3,"file":"Personal Portfolio.3698a05b.js.map"}